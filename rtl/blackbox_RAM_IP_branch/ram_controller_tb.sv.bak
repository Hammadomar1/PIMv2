module ram_controller_tb;

    logic clk;
    logic reset_n;
    logic [31:0] riscv_addr;
    logic [31:0] riscv_wdata;
    logic [3:0] riscv_wmask;
    logic riscv_rstrb;
    logic riscv_wen;
    logic [31:0] riscv_rdata;
    logic riscv_rbusy;
    logic riscv_wbusy;

    logic [9:0] ram_addr;
    logic [31:0] ram_wdata;
    logic ram_wen;
    logic ram_rden;
    logic [3:0] ram_byteena;
    logic [31:0] ram_rdata;

    logic [31:0] io_data_out;
    logic io_write_en;
    logic [31:0] io_rdata;
    logic io_busy;

    memory_controller dut (
        .clk(clk),
        .reset_n(reset_n),
        .riscv_addr(riscv_addr),
        .riscv_wdata(riscv_wdata),
        .riscv_wmask(riscv_wmask),
        .riscv_rstrb(riscv_rstrb),
        .riscv_wen(riscv_wen),
        .riscv_rdata(riscv_rdata),
        .riscv_rbusy(riscv_rbusy),
        .riscv_wbusy(riscv_wbusy),
        .ram_addr(ram_addr),
        .ram_wdata(ram_wdata),
        .ram_wen(ram_wen),
        .ram_rden(ram_rden),
        .ram_byteena(ram_byteena),
        .ram_rdata(ram_rdata),
        .io_data_out(io_data_out),
        .io_write_en(io_write_en),
        .io_rdata(io_rdata),
        .io_busy(io_busy)
    );

    // Clock generation
    always #5 clk = ~clk;

    initial begin
        clk = 0;
        reset_n = 0;
        riscv_addr = 32'h00000000;
        riscv_wdata = 32'h0;
        riscv_wmask = 4'b1111;
        riscv_rstrb = 0;
        riscv_wen = 0;
        io_rdata = 32'h12345678;
        io_busy = 0;
        ram_rdata = 32'h87654321;
        
        // Reset pulse
        #10 reset_n = 1;
        
        // Test RAM write
        #10 riscv_addr = 32'h00000004; riscv_wdata = 32'hABCD1234; riscv_wen = 1;
        #10 riscv_wen = 0;

        // Test RAM read
        #10 riscv_rstrb = 1;
        #10 riscv_rstrb = 0;

        // Test I/O write
        #10 riscv_addr = 32'hFFFFFFFF; riscv_wdata = 32'hDEADBEEF; riscv_wen = 1;
        #10 riscv_wen = 0;

        // Test I/O read
        #10 riscv_rstrb = 1;
        #10 riscv_rstrb = 0;

        #50 $finish;
    end

endmodule
